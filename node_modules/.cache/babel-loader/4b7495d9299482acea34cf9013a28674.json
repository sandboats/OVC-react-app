{"ast":null,"code":"var _jsxFileName = \"/Users/Akhil/Desktop/Reactjs/ovc/src/UserList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"./userActions\";\n\nclass UserList extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  render() {\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          users = _this$props.users;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"th\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Company\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, users.map((user, key) => {\n      return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, user.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, user.email), React.createElement(\"td\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, user.address.city), React.createElement(\"td\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, user.company.name)));\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.items,\n  loading: state.users.loading,\n  error: state.users.error\n});\n\nexport default connect(mapStateToProps)(UserList);","map":{"version":3,"sources":["/Users/Akhil/Desktop/Reactjs/ovc/src/UserList.js"],"names":["React","connect","fetchUsers","UserList","Component","componentDidMount","props","dispatch","render","error","loading","users","message","textAlign","map","user","key","name","email","address","city","company","mapStateToProps","state","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA0B,eAA1B;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX,CAAoBL,UAAU,EAA9B;AACD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,wBAC2B,KAAKF,KADhC;AAAA,UACCG,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBC,KADjB,eACiBA,KADjB;;AAGP,QAAIF,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACG,OAAnB,CAAP;AACD;;AAED,QAAIF,OAAJ,EAAa;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAI,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KAAe;AACvB,aACE,0CACE;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,KAAV,CAFF,EAGE;AAAI,QAAA,KAAK,EAAE;AAAEL,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCE,IAAI,CAACI,OAAL,CAAaC,IAAjD,CAHF,EAIE;AAAI,QAAA,KAAK,EAAE;AAAEP,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCE,IAAI,CAACM,OAAL,CAAaJ,IAAjD,CAJF,CADF,CADF;AAUD,KAXD,CADF,CAPF,CADF,CADF;AA2BD;;AA3CoC;;AA8CvC,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,KAAK,EAAEY,KAAK,CAACZ,KAAN,CAAYa,KADa;AAEhCd,EAAAA,OAAO,EAAEa,KAAK,CAACZ,KAAN,CAAYD,OAFW;AAGhCD,EAAAA,KAAK,EAAEc,KAAK,CAACZ,KAAN,CAAYF;AAHa,CAAL,CAA7B;;AAMA,eAAeR,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,QAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers }from \"./userActions\";\n\nclass UserList extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  render() {\n    const { error, loading, users } = this.props;\n\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <React.Fragment>\n        <table>\n          <thead>\n            <th>Name</th>\n            <th>Email</th>\n            <th style={{ textAlign: \"right\" }}>City</th>\n            <th style={{ textAlign: \"right\" }}>Company</th>\n          </thead>\n          <tbody>{\n            users.map((user, key) => {\n              return (\n                <>\n                  <tr key={key}>\n                    <td>{user.name}</td>\n                    <td>{user.email}</td>\n                    <td style={{ textAlign: \"right\" }}>{user.address.city}</td>\n                    <td style={{ textAlign: \"right\" }}>{user.company.name}</td>\n                  </tr>\n                </>\n              )\n            })\n          }\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.items,\n  loading: state.users.loading,\n  error: state.users.error\n});\n\nexport default connect(mapStateToProps)(UserList);\n"]},"metadata":{},"sourceType":"module"}