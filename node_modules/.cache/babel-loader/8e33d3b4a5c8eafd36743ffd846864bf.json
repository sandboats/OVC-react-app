{"ast":null,"code":"function getProducts() {\n  return fetch(\"http://jsonplaceholder.typicode.com/posts\").then(handleErrors).then(res => res.json());\n}\n/* function fakeGetProducts() {\n  return new Promise(resolve => {\n    // Resolve after a timeout so we can see the loading indicator\n    setTimeout(\n      () =>\n        resolve({\n          products: [\n            {\n              id: 0,\n              name: \"Apple\"\n            },\n            {\n              id: 1,\n              name: \"Bananas\"\n            },\n            {\n              id: 2,\n              name: \"Strawberries\"\n            }\n          ]\n        }),\n      1000\n    );\n  });\n} */\n\n\nexport function fetchProducts() {\n  return dispatch => {\n    dispatch(fetchProductsBegin());\n    return getProducts().then(json => {\n      dispatch(fetchProductsSuccess(json.products));\n      return json.products;\n    }).catch(error => dispatch(fetchProductsFailure(error)));\n  };\n}\n/* // Handle HTTP errors since fetch won't.\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n} */\n\nexport const FETCH_PRODUCTS_BEGIN = \"FETCH_PRODUCTS_BEGIN\";\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\nexport const FETCH_PRODUCTS_FAILURE = \"FETCH_PRODUCTS_FAILURE\";\nexport const fetchProductsBegin = () => ({\n  type: FETCH_PRODUCTS_BEGIN\n});\nexport const fetchProductsSuccess = products => ({\n  type: FETCH_PRODUCTS_SUCCESS,\n  payload: {\n    products\n  }\n});\nexport const fetchProductsFailure = error => ({\n  type: FETCH_PRODUCTS_FAILURE,\n  payload: {\n    error\n  }\n});","map":{"version":3,"sources":["/Users/Akhil/Desktop/Reactjs/j3378m4v3y/src/productActions.js"],"names":["getProducts","fetch","then","handleErrors","res","json","fetchProducts","dispatch","fetchProductsBegin","fetchProductsSuccess","products","catch","error","fetchProductsFailure","FETCH_PRODUCTS_BEGIN","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_FAILURE","type","payload"],"mappings":"AAAA,SAASA,WAAT,GAAuB;AACrB,SAAOC,KAAK,CAAC,2CAAD,CAAL,CACJC,IADI,CACCC,YADD,EAEJD,IAFI,CAECE,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFR,CAAP;AAGD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACA,WAAOR,WAAW,GACfE,IADI,CACCG,IAAI,IAAI;AACZE,MAAAA,QAAQ,CAACE,oBAAoB,CAACJ,IAAI,CAACK,QAAN,CAArB,CAAR;AACA,aAAOL,IAAI,CAACK,QAAZ;AACD,KAJI,EAKJC,KALI,CAKEC,KAAK,IACVL,QAAQ,CAACM,oBAAoB,CAACD,KAAD,CAArB,CANL,CAAP;AAQD,GAVD;AAWD;AAED;;;;;;;;AAQA,OAAO,MAAME,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GACjC,wBADK;AAEP,OAAO,MAAMC,sBAAsB,GACjC,wBADK;AAGP,OAAO,MAAMR,kBAAkB,GAAG,OAAO;AACvCS,EAAAA,IAAI,EAAEH;AADiC,CAAP,CAA3B;AAIP,OAAO,MAAML,oBAAoB,GAAGC,QAAQ,KAAK;AAC/CO,EAAAA,IAAI,EAAEF,sBADyC;AAE/CG,EAAAA,OAAO,EAAE;AAAER,IAAAA;AAAF;AAFsC,CAAL,CAArC;AAKP,OAAO,MAAMG,oBAAoB,GAAGD,KAAK,KAAK;AAC5CK,EAAAA,IAAI,EAAED,sBADsC;AAE5CE,EAAAA,OAAO,EAAE;AAAEN,IAAAA;AAAF;AAFmC,CAAL,CAAlC","sourcesContent":["function getProducts() {\n  return fetch(\"http://jsonplaceholder.typicode.com/posts\")\n    .then(handleErrors)\n    .then(res => res.json());\n}\n\n/* function fakeGetProducts() {\n  return new Promise(resolve => {\n    // Resolve after a timeout so we can see the loading indicator\n    setTimeout(\n      () =>\n        resolve({\n          products: [\n            {\n              id: 0,\n              name: \"Apple\"\n            },\n            {\n              id: 1,\n              name: \"Bananas\"\n            },\n            {\n              id: 2,\n              name: \"Strawberries\"\n            }\n          ]\n        }),\n      1000\n    );\n  });\n} */\n\nexport function fetchProducts() {\n  return dispatch => {\n    dispatch(fetchProductsBegin());\n    return getProducts()\n      .then(json => {\n        dispatch(fetchProductsSuccess(json.products));\n        return json.products;\n      })\n      .catch(error =>\n        dispatch(fetchProductsFailure(error))\n      );\n  };\n}\n\n/* // Handle HTTP errors since fetch won't.\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n} */\n\nexport const FETCH_PRODUCTS_BEGIN = \"FETCH_PRODUCTS_BEGIN\";\nexport const FETCH_PRODUCTS_SUCCESS =\n  \"FETCH_PRODUCTS_SUCCESS\";\nexport const FETCH_PRODUCTS_FAILURE =\n  \"FETCH_PRODUCTS_FAILURE\";\n\nexport const fetchProductsBegin = () => ({\n  type: FETCH_PRODUCTS_BEGIN\n});\n\nexport const fetchProductsSuccess = products => ({\n  type: FETCH_PRODUCTS_SUCCESS,\n  payload: { products }\n});\n\nexport const fetchProductsFailure = error => ({\n  type: FETCH_PRODUCTS_FAILURE,\n  payload: { error }\n});\n"]},"metadata":{},"sourceType":"module"}